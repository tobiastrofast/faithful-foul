{"version":3,"sources":["../src/events.ts","../src/VirtualTourPlugin.ts","../src/constants.ts","../src/models/arrow.json","../src/models/arrow_outline.json","../src/datasources/ClientSideDatasource.ts","../src/datasources/AbstractDataSource.ts","../src/datasources/ServerSideDatasource.ts","../src/utils.ts"],"sourcesContent":["import { Position, TypedEvent } from '@photo-sphere-viewer/core';\nimport { VirtualTourLink, VirtualTourNode } from './model';\nimport type { VirtualTourPlugin } from './VirtualTourPlugin';\n\n/**\n * @event Triggered when the current node changes\n */\nexport class NodeChangedEvent extends TypedEvent<VirtualTourPlugin> {\n    static override readonly type = 'node-changed';\n    override type: 'node-changed';\n\n    constructor(\n        public readonly node: VirtualTourNode,\n        public readonly data: {\n            fromNode: VirtualTourNode;\n            fromLink: VirtualTourLink;\n            fromLinkPosition: Position;\n        }\n    ) {\n        super(NodeChangedEvent.type);\n    }\n}\n\nexport type VirtualTourEvents = NodeChangedEvent;\n","import type { CompassPlugin } from '@photo-sphere-viewer/compass-plugin';\nimport type { Point, Position, Tooltip, Viewer } from '@photo-sphere-viewer/core';\nimport { AbstractConfigurablePlugin, CONSTANTS, events, PSVError, utils } from '@photo-sphere-viewer/core';\nimport type { GalleryPlugin } from '@photo-sphere-viewer/gallery-plugin';\nimport type { events as mapEvents, MapPlugin } from '@photo-sphere-viewer/map-plugin';\nimport type { events as markersEvents, MarkersPlugin } from '@photo-sphere-viewer/markers-plugin';\nimport {\n    AmbientLight,\n    BackSide,\n    Group,\n    MathUtils,\n    Mesh,\n    MeshBasicMaterial,\n    MeshLambertMaterial,\n    PointLight,\n} from 'three';\nimport { ARROW_GEOM, ARROW_OUTLINE_GEOM, DEFAULT_ARROW, DEFAULT_MARKER, LINK_DATA, LINK_ID } from './constants';\nimport { AbstractDatasource } from './datasources/AbstractDataSource';\nimport { ClientSideDatasource } from './datasources/ClientSideDatasource';\nimport { ServerSideDatasource } from './datasources/ServerSideDatasource';\nimport { NodeChangedEvent, VirtualTourEvents } from './events';\nimport { GpsPosition, VirtualTourLink, VirtualTourNode, VirtualTourPluginConfig } from './model';\nimport { gpsToSpherical, setMeshColor } from './utils';\n\nconst getConfig = utils.getConfigParser<VirtualTourPluginConfig>(\n    {\n        dataMode: 'client',\n        positionMode: 'manual',\n        renderMode: '3d',\n        nodes: null,\n        getNode: null,\n        startNodeId: null,\n        preload: false,\n        rotateSpeed: '20rpm',\n        transition: CONSTANTS.DEFAULT_TRANSITION,\n        linksOnCompass: true,\n        markerStyle: DEFAULT_MARKER,\n        arrowStyle: DEFAULT_ARROW,\n        markerPitchOffset: -0.1,\n        arrowPosition: 'bottom',\n        map: null,\n    },\n    {\n        dataMode(dataMode) {\n            if (dataMode !== 'client' && dataMode !== 'server') {\n                throw new PSVError('VirtualTourPlugin: invalid dataMode');\n            }\n            return dataMode;\n        },\n        positionMode(positionMode) {\n            if (positionMode !== 'gps' && positionMode !== 'manual') {\n                throw new PSVError('VirtualTourPlugin: invalid positionMode');\n            }\n            return positionMode;\n        },\n        renderMode(renderMode) {\n            if (renderMode !== '3d' && renderMode !== 'markers') {\n                throw new PSVError('VirtualTourPlugin: invalid renderMode');\n            }\n            return renderMode;\n        },\n        markerStyle(markerStyle, { defValue }) {\n            return { ...defValue, ...markerStyle };\n        },\n        arrowStyle(arrowStyle, { defValue }) {\n            return { ...defValue, ...arrowStyle };\n        },\n        map(map, { rawConfig }) {\n            if (map) {\n                if (rawConfig.dataMode === 'server') {\n                    utils.logWarn('VirtualTourPlugin: The map cannot be used in server side mode');\n                    return null;\n                }\n                if (!map.imageUrl) {\n                    utils.logWarn('VirtualTourPlugin: configuring the map requires at least \"imageUrl\"');\n                    return null;\n                }\n            }\n            return map;\n        },\n    }\n);\n\n/**\n * Creates virtual tours by linking multiple panoramas\n */\nexport class VirtualTourPlugin extends AbstractConfigurablePlugin<\n    VirtualTourPluginConfig,\n    VirtualTourPluginConfig,\n    never,\n    VirtualTourEvents\n> {\n    static override readonly id = 'virtual-tour';\n    static override readonly configParser = getConfig;\n    static override readonly readonlyOptions = Object.keys(getConfig.defaults);\n\n    private readonly state = {\n        currentNode: null as VirtualTourNode,\n        currentTooltip: null as Tooltip,\n        loadingNode: null as string,\n        preload: {} as Record<string, boolean | Promise<any>>,\n    };\n\n    private datasource: AbstractDatasource;\n    private arrowsGroup: Group;\n\n    private map?: MapPlugin;\n    private markers?: MarkersPlugin;\n    private compass?: CompassPlugin;\n    private gallery?: GalleryPlugin;\n\n    get is3D(): boolean {\n        return this.config.renderMode === '3d';\n    }\n\n    get isServerSide(): boolean {\n        return this.config.dataMode === 'server';\n    }\n\n    get isGps(): boolean {\n        return this.config.positionMode === 'gps';\n    }\n\n    constructor(viewer: Viewer, config: VirtualTourPluginConfig) {\n        super(viewer, config);\n\n        if (this.is3D) {\n            this.arrowsGroup = new Group();\n\n            const localLight = new PointLight(0xffffff, 1, 0);\n            localLight.position.set(0, this.config.arrowPosition === 'bottom' ? 2 : -2, 0);\n            this.arrowsGroup.add(localLight);\n        }\n    }\n\n    /**\n     * @internal\n     */\n    override init() {\n        super.init();\n\n        this.markers = this.viewer.getPlugin('markers');\n        this.compass = this.viewer.getPlugin('compass');\n        this.gallery = this.viewer.getPlugin('gallery');\n\n        if (!this.is3D && !this.markers) {\n            throw new PSVError('VirtualTour plugin requires the Markers plugin in markers mode.');\n        }\n\n        if (this.markers?.config.markers) {\n            utils.logWarn(\n                'No default markers can be configured on Markers plugin when using VirtualTour plugin. ' +\n                'Consider defining `markers` on each tour node.'\n            );\n            delete this.markers.config.markers;\n        }\n\n        if (this.config.map) {\n            this.map = this.viewer.getPlugin('map');\n            if (!this.map) {\n                utils.logWarn('The map is configured on the VirtualTourPlugin but the MapPlugin is not loaded.');\n            }\n        }\n\n        this.datasource = this.isServerSide\n            ? new ServerSideDatasource(this, this.viewer)\n            : new ClientSideDatasource(this, this.viewer);\n\n        if (this.is3D) {\n            this.viewer.observeObjects(LINK_DATA);\n\n            this.viewer.addEventListener(events.PositionUpdatedEvent.type, this);\n            this.viewer.addEventListener(events.ZoomUpdatedEvent.type, this);\n            this.viewer.addEventListener(events.ClickEvent.type, this);\n            this.viewer.addEventListener(events.ObjectEnterEvent.type, this);\n            this.viewer.addEventListener(events.ObjectHoverEvent.type, this);\n            this.viewer.addEventListener(events.ObjectLeaveEvent.type, this);\n            this.viewer.addEventListener(events.ReadyEvent.type, this, { once: true });\n        } else {\n            this.markers.addEventListener('select-marker', this);\n        }\n\n        if (this.map) {\n            this.map.addEventListener('select-hotspot', this);\n            this.map.setImage(this.config.map.imageUrl);\n        }\n\n        if (this.isServerSide) {\n            if (this.config.startNodeId) {\n                this.setCurrentNode(this.config.startNodeId);\n            }\n        } else if (this.config.nodes) {\n            this.setNodes(this.config.nodes, this.config.startNodeId);\n            delete this.config.nodes;\n        }\n    }\n\n    /**\n     * @internal\n     */\n    override destroy() {\n        if (this.markers) {\n            this.markers.removeEventListener('select-marker', this);\n        }\n        if (this.arrowsGroup) {\n            this.viewer.renderer.removeObject(this.arrowsGroup);\n        }\n\n        this.map?.removeEventListener('select-hotspot', this);\n\n        this.viewer.removeEventListener(events.PositionUpdatedEvent.type, this);\n        this.viewer.removeEventListener(events.ZoomUpdatedEvent.type, this);\n        this.viewer.removeEventListener(events.ClickEvent.type, this);\n        this.viewer.removeEventListener(events.ObjectEnterEvent.type, this);\n        this.viewer.removeEventListener(events.ObjectHoverEvent.type, this);\n        this.viewer.removeEventListener(events.ObjectLeaveEvent.type, this);\n        this.viewer.removeEventListener(events.ReadyEvent.type, this);\n\n        this.viewer.unobserveObjects(LINK_DATA);\n\n        this.datasource.destroy();\n\n        delete this.datasource;\n        delete this.markers;\n        delete this.compass;\n        delete this.gallery;\n        delete this.arrowsGroup;\n\n        super.destroy();\n    }\n\n    /**\n     * @internal\n     */\n    handleEvent(e: Event) {\n        if (e instanceof events.ReadyEvent) {\n            this.__positionArrows();\n            this.viewer.renderer.addObject(this.arrowsGroup);\n\n            const ambientLight = new AmbientLight(0xffffff, 1);\n            this.viewer.renderer.addObject(ambientLight);\n\n            this.viewer.needsUpdate();\n        } else if (e instanceof events.PositionUpdatedEvent || e instanceof events.ZoomUpdatedEvent) {\n            this.__positionArrows();\n        } else if (e instanceof events.ClickEvent) {\n            const link = e.data.objects.find((o) => o.userData[LINK_DATA])?.userData[LINK_DATA];\n            if (link) {\n                this.setCurrentNode(link.nodeId, link);\n            }\n        } else if (e.type === 'select-marker') {\n            const link = (e as markersEvents.SelectMarkerEvent).marker.data?.[LINK_DATA];\n            if (link) {\n                this.setCurrentNode(link.nodeId, link);\n            }\n        } else if (e instanceof events.ObjectEnterEvent) {\n            if (e.userDataKey === LINK_DATA) {\n                this.__onEnterObject(e.object, e.viewerPoint);\n            }\n        } else if (e instanceof events.ObjectLeaveEvent) {\n            if (e.userDataKey === LINK_DATA) {\n                this.__onLeaveObject(e.object);\n            }\n        } else if (e instanceof events.ObjectHoverEvent) {\n            if (e.userDataKey === LINK_DATA) {\n                this.__onHoverObject(e.viewerPoint);\n            }\n        } else if (e.type === 'select-hotspot') {\n            const id = (e as mapEvents.SelectHotspot).hotspotId;\n            if (id.startsWith(LINK_ID)) {\n                this.setCurrentNode(id.substring(LINK_ID.length));\n            }\n        }\n    }\n\n    /**\n     * Sets the nodes (client mode only)\n     * @throws {@link PSVError} if not in client mode\n     */\n    setNodes(nodes: VirtualTourNode[], startNodeId?: string) {\n        if (this.isServerSide) {\n            throw new PSVError('Cannot set nodes in server side mode');\n        }\n\n        (this.datasource as ClientSideDatasource).setNodes(nodes);\n\n        if (!startNodeId) {\n            startNodeId = nodes[0].id;\n        } else if (!this.datasource.nodes[startNodeId]) {\n            startNodeId = nodes[0].id;\n            utils.logWarn(`startNodeId not found is provided nodes, resetted to ${startNodeId}`);\n        }\n\n        this.setCurrentNode(startNodeId);\n\n        if (this.gallery) {\n            this.gallery.setItems(\n                nodes.map((node) => ({\n                    id: node.id,\n                    panorama: node.panorama,\n                    name: node.name,\n                    thumbnail: node.thumbnail,\n                    options: {\n                        caption: node.caption,\n                        panoData: node.panoData,\n                        sphereCorrection: node.sphereCorrection,\n                        description: node.description,\n                    },\n                })),\n                (id) => {\n                    this.setCurrentNode(id as string);\n                }\n            );\n        }\n\n        if (this.map) {\n            this.map.setHotspots([\n                ...nodes.map((node) => {\n                    return {\n                        ...(node.map || {}),\n                        ...this.__getNodeMapPosition(node),\n                        id: LINK_ID + node.id,\n                        tooltip: node.name,\n                    };\n                }),\n            ]);\n        }\n    }\n\n    /**\n     * Changes the current node\n     * @returns {Promise<boolean>} resolves false if the loading was aborted by another call\n     */\n    setCurrentNode(nodeId: string, fromLink?: VirtualTourLink): Promise<boolean> {\n        if (nodeId === this.state.currentNode?.id) {\n            return Promise.resolve(true);\n        }\n\n        this.viewer.hideError();\n\n        this.state.loadingNode = nodeId;\n\n        const fromNode = this.state.currentNode;\n        const fromLinkPosition = fromNode && fromLink ? this.__getLinkPosition(fromNode, fromLink) : null;\n\n        return Promise.all([\n            // if this node is already preloading, wait for it\n            Promise.resolve(this.state.preload[nodeId]).then(() => {\n                if (this.state.loadingNode !== nodeId) {\n                    throw utils.getAbortError();\n                }\n\n                return this.datasource.loadNode(nodeId);\n            }),\n            Promise.resolve(fromLinkPosition ? this.config.rotateSpeed : false)\n                .then((speed) => {\n                    if (speed) {\n                        return this.viewer.animate({ ...fromLinkPosition, speed });\n                    }\n                })\n                .then(() => {\n                    this.viewer.loader.show();\n                }),\n        ])\n            .then(([node]) => {\n                if (this.state.loadingNode !== nodeId) {\n                    throw utils.getAbortError();\n                }\n\n                this.state.currentNode = node;\n\n                if (this.state.currentTooltip) {\n                    this.state.currentTooltip.hide();\n                    this.state.currentTooltip = null;\n                }\n\n                if (this.is3D) {\n                    this.arrowsGroup.remove(...this.arrowsGroup.children.filter((o) => (o as Mesh).isMesh));\n                }\n\n                this.gallery?.hide();\n                this.markers?.clearMarkers();\n                this.compass?.clearHotspots();\n\n                if (this.map) {\n                    this.map.minimize();\n                    const center = this.__getNodeMapPosition(node);\n                    if (typeof this.config.transition === 'number') {\n                        setTimeout(() => this.map.setCenter(center), this.config.transition / 2);\n                    } else {\n                        this.map.setCenter(center);\n                    }\n                }\n\n                return this.viewer\n                    .setPanorama(node.panorama, {\n                        transition: this.config.transition,\n                        caption: node.caption,\n                        description: node.description,\n                        panoData: node.panoData,\n                        sphereCorrection: node.sphereCorrection,\n                    })\n                    .then((completed) => {\n                        if (!completed) {\n                            throw utils.getAbortError();\n                        }\n                    });\n            })\n            .then(() => {\n                if (this.state.loadingNode !== nodeId) {\n                    throw utils.getAbortError();\n                }\n\n                const node = this.state.currentNode;\n\n                if (node.markers) {\n                    this.__addNodeMarkers(node);\n                }\n\n                this.__renderLinks(node);\n                this.__preload(node);\n\n                this.dispatchEvent(\n                    new NodeChangedEvent(node, {\n                        fromNode,\n                        fromLink,\n                        fromLinkPosition,\n                    })\n                );\n\n                this.state.loadingNode = null;\n\n\n                return true;\n            })\n            .catch((err) => {\n                if (utils.isAbortError(err)) {\n                    return false;\n                }\n\n                this.viewer.showError(this.viewer.config.lang.loadError);\n\n                this.viewer.loader.hide();\n                this.viewer.navbar.setCaption('');\n\n                this.state.loadingNode = null;\n\n                throw err;\n            });\n    }\n\n    /**\n     * Adds the links for the node\n     */\n    private __renderLinks(node: VirtualTourNode) {\n        const positions: Position[] = [];\n\n        node.links.forEach((link) => {\n            const position = this.__getLinkPosition(node, link);\n            position.yaw += link.linkOffset?.yaw ?? 0;\n            position.pitch += link.linkOffset?.pitch ?? 0;\n            positions.push(position);\n\n            if (this.is3D) {\n                const mesh = new Mesh(ARROW_GEOM, new MeshLambertMaterial());\n                mesh.userData = { [LINK_DATA]: link };\n                mesh.rotation.order = 'YXZ';\n                mesh.rotateY(-position.yaw);\n                this.viewer.dataHelper\n                    .sphericalCoordsToVector3({ yaw: position.yaw, pitch: 0 }, mesh.position)\n                    .multiplyScalar(1 / CONSTANTS.SPHERE_RADIUS);\n\n                const outlineMesh = new Mesh(ARROW_OUTLINE_GEOM, new MeshBasicMaterial({ side: BackSide }));\n                outlineMesh.position.copy(mesh.position);\n                outlineMesh.rotation.copy(mesh.rotation);\n\n                setMeshColor(mesh, link.arrowStyle?.color || this.config.arrowStyle.color);\n                setMeshColor(outlineMesh, link.arrowStyle?.outlineColor || this.config.arrowStyle.outlineColor);\n\n                this.arrowsGroup.add(mesh);\n                this.arrowsGroup.add(outlineMesh);\n            } else {\n                if (this.isGps) {\n                    position.pitch += this.config.markerPitchOffset;\n                }\n\n                this.markers.addMarker(\n                    {\n                        ...this.config.markerStyle,\n                        ...link.markerStyle,\n                        position: position,\n                        id: LINK_ID + link.nodeId,\n                        tooltip: link.name,\n                        visible: true,\n                        hideList: true,\n                        data: { [LINK_DATA]: link },\n                    },\n                    false\n                );\n            }\n        });\n\n        if (this.is3D) {\n            this.__positionArrows();\n        } else {\n            this.markers.renderMarkers();\n        }\n\n        if (this.config.linksOnCompass && this.compass) {\n            this.compass.setHotspots(positions);\n        }\n    }\n\n    /**\n     * Computes the marker position for a link\n     */\n    private __getLinkPosition(node: VirtualTourNode, link: VirtualTourLink): Position {\n        if (this.isGps) {\n            return gpsToSpherical(node.gps, link.gps);\n        } else {\n            return this.viewer.dataHelper.cleanPosition(link.position);\n        }\n    }\n\n    private __onEnterObject(mesh: Mesh, viewerPoint: Point) {\n        const link = mesh.userData[LINK_DATA];\n\n        setMeshColor(mesh as any, link.arrowStyle?.hoverColor || this.config.arrowStyle.hoverColor);\n\n        if (link.name) {\n            this.state.currentTooltip = this.viewer.createTooltip({\n                left: viewerPoint.x,\n                top: viewerPoint.y,\n                content: link.name,\n            });\n        }\n\n        this.viewer.needsUpdate();\n    }\n\n    private __onHoverObject(viewerPoint: Point) {\n        if (this.state.currentTooltip) {\n            this.state.currentTooltip.move({\n                left: viewerPoint.x,\n                top: viewerPoint.y,\n            });\n        }\n    }\n\n    private __onLeaveObject(mesh: Mesh) {\n        const link = mesh.userData[LINK_DATA];\n\n        setMeshColor(mesh as any, link.arrowStyle?.color || this.config.arrowStyle.color);\n\n        if (this.state.currentTooltip) {\n            this.state.currentTooltip.hide();\n            this.state.currentTooltip = null;\n        }\n\n        this.viewer.needsUpdate();\n    }\n\n    /**\n     * Updates to position of the group of arrows\n     */\n    private __positionArrows() {\n        this.arrowsGroup.position.copy(this.viewer.state.direction).multiplyScalar(0.5);\n        const s = this.config.arrowStyle.scale;\n        const f = s[1] + (s[0] - s[1]) * (this.viewer.getZoomLevel() / 100);\n        const y = 2.5 - (this.viewer.getZoomLevel() / 100) * 1.5;\n        this.arrowsGroup.position.y += this.config.arrowPosition === 'bottom' ? -y : y;\n        this.arrowsGroup.scale.set(f, f, f);\n    }\n\n    /**\n     * Manage the preload of the linked panoramas\n     */\n    private __preload(node: VirtualTourNode) {\n        if (!this.config.preload) {\n            return;\n        }\n\n        this.state.preload[node.id] = true;\n\n        this.state.currentNode.links\n            .filter((link) => !this.state.preload[link.nodeId])\n            .filter((link) => {\n                if (typeof this.config.preload === 'function') {\n                    return this.config.preload(this.state.currentNode, link);\n                } else {\n                    return true;\n                }\n            })\n            .forEach((link) => {\n                this.state.preload[link.nodeId] = this.datasource\n                    .loadNode(link.nodeId)\n                    .then((linkNode) => {\n                        return this.viewer.textureLoader.preloadPanorama(linkNode.panorama);\n                    })\n                    .then(() => {\n                        this.state.preload[link.nodeId] = true;\n                    })\n                    .catch(() => {\n                        delete this.state.preload[link.nodeId];\n                    });\n            });\n    }\n\n    /**\n     * Changes the markers to the ones defined on the node\n     */\n    private __addNodeMarkers(node: VirtualTourNode) {\n        if (this.markers) {\n            this.markers.setMarkers(\n                node.markers.map((marker) => {\n                    if (marker.gps && this.isGps) {\n                        marker.position = gpsToSpherical(node.gps, marker.gps);\n                        if (marker.data?.['map'] && this.map) {\n                            Object.assign(marker.data['map'], this.__getGpsMapPosition(marker.gps));\n                        }\n                    }\n                    return marker;\n                })\n            );\n        } else {\n            utils.logWarn(`Node ${node.id} markers ignored because the plugin is not loaded.`);\n        }\n    }\n\n    /**\n     * Gets the position of a node on the map, if applicable\n     */\n    private __getNodeMapPosition(node: VirtualTourNode): Point {\n        const fromGps = this.__getGpsMapPosition(node.gps);\n        if (fromGps) {\n            return fromGps;\n        } else if (node.map) {\n            return { x: node.map.x, y: node.map.y };\n        } else {\n            return null;\n        }\n    }\n\n    /**\n     * Gets a gps position on the map\n     */\n    private __getGpsMapPosition(gps: GpsPosition): Point {\n        const map = this.config.map;\n        if (this.isGps && map.extent && map.size) {\n            return {\n                x: MathUtils.mapLinear(gps[0], map.extent[0], map.extent[2], 0, map.size.width),\n                y: MathUtils.mapLinear(gps[1], map.extent[1], map.extent[3], 0, map.size.height),\n            };\n        } else {\n            return null;\n        }\n    }\n}\n","import { ObjectLoader } from 'three';\nimport arrowIconSvg from './arrow.svg';\nimport { VirtualTourArrowStyle, VirtualTourMarkerStyle } from './model';\nimport arrowGeometryJson from './models/arrow.json';\nimport arrowOutlineGeometryJson from './models/arrow_outline.json';\n\nexport const LINK_DATA = 'tourLink';\nexport const LINK_ID = '__tour-link__';\n\n/**\n * Default style of the link marker\n */\nexport const DEFAULT_MARKER: VirtualTourMarkerStyle = {\n    html: arrowIconSvg,\n    size: { width: 80, height: 80 },\n    scale: [0.5, 2],\n    anchor: 'top center',\n    className: 'psv-virtual-tour__marker',\n    style: {\n        color: 'rgba(0, 208, 255, 0.8)',\n    },\n};\n\n/**\n * Default style of the link arrow\n */\nexport const DEFAULT_ARROW: VirtualTourArrowStyle = {\n    color: '#aaaaaa',\n    hoverColor: '#aa5500',\n    outlineColor: '#000000',\n    scale: [0.5, 2],\n};\n\nexport const { ARROW_GEOM, ARROW_OUTLINE_GEOM } = (() => {\n    const loader = new ObjectLoader();\n    const geometries = loader.parseGeometries([arrowGeometryJson, arrowOutlineGeometryJson]);\n    const arrow = geometries[arrowGeometryJson.uuid];\n    const arrowOutline = geometries[arrowOutlineGeometryJson.uuid];\n    const scale = 0.015;\n    const rot = Math.PI / 2;\n    arrow.scale(scale, scale, scale);\n    arrow.rotateX(rot);\n    arrowOutline.scale(scale, scale, scale);\n    arrowOutline.rotateX(rot);\n    return { ARROW_GEOM: arrow, ARROW_OUTLINE_GEOM: arrowOutline };\n})();\n","{\n  \"metadata\": {\n    \"version\": 4.5,\n    \"type\": \"BufferGeometry\",\n    \"generator\": \"BufferGeometry.toJSON\"\n  },\n  \"uuid\": \"8B1A6E5B-A7CC-4471-9CA0-BD64D80ABB79\",\n  \"type\": \"BufferGeometry\",\n  \"data\": {\n    \"attributes\": {\n      \"position\": {\n        \"itemSize\": 3,\n        \"type\": \"Float32Array\",\n        \"array\": [-25,-15,-2.5,0,0,-2.5,0,-5,-2.5,0,-5,-2.5,0,0,-2.5,25,-15,-2.5,0,-5,-2.5,25,-15,-2.5,25,-20,-2.5,0,-5,-2.5,-25,-20,-2.5,-25,-15,-2.5,25,-15,2.5,25,-20,2.5,25,-15,-2.5,25,-15,-2.5,25,-20,2.5,25,-20,-2.5,25,-20,2.5,0,-5,2.5,25,-20,-2.5,25,-20,-2.5,0,-5,2.5,0,-5,-2.5,0,-5,2.5,-25,-20,2.5,0,-5,-2.5,0,-5,-2.5,-25,-20,2.5,-25,-20,-2.5,-25,-20,2.5,-25,-15,2.5,-25,-20,-2.5,-25,-20,-2.5,-25,-15,2.5,-25,-15,-2.5,-25,-15,2.5,0,0,2.5,-25,-15,-2.5,-25,-15,-2.5,0,0,2.5,0,0,-2.5,0,0,2.5,25,-15,2.5,0,0,-2.5,0,0,-2.5,25,-15,2.5,25,-15,-2.5,25,-20,2.5,25,-15,2.5,0,-5,2.5,0,-5,2.5,25,-15,2.5,0,0,2.5,0,-5,2.5,0,0,2.5,-25,-15,2.5,-25,-15,2.5,-25,-20,2.5,0,-5,2.5],\n        \"normalized\": false\n      },\n      \"normal\": {\n        \"itemSize\": 3,\n        \"type\": \"Float32Array\",\n        \"array\": [0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,-0.514495,-0.857492,0,-0.514495,-0.857492,0,-0.514495,-0.857492,0,-0.514495,-0.857492,0,-0.514495,-0.857492,0,-0.514495,-0.857492,0,0.514495,-0.857492,0,0.514495,-0.857492,0,0.514495,-0.857492,0,0.514495,-0.857492,0,0.514495,-0.857492,0,0.514495,-0.857492,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,-0.514495,0.857492,0,-0.514495,0.857492,0,-0.514495,0.857492,0,-0.514495,0.857492,0,-0.514495,0.857492,0,-0.514495,0.857492,0,0.514495,0.857492,0,0.514495,0.857492,0,0.514495,0.857492,0,0.514495,0.857492,0,0.514495,0.857492,0,0.514495,0.857492,0,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1],\n        \"normalized\": false\n      }\n    },\n    \"boundingSphere\": {\n      \"center\": [0,-10,0],\n      \"radius\": 27.041634\n    }\n  }\n}\n","{\n  \"metadata\": {\n    \"version\": 4.5,\n    \"type\": \"BufferGeometry\",\n    \"generator\": \"BufferGeometry.toJSON\"\n  },\n  \"uuid\": \"B12A1453-6E56-40AC-840B-BA7DF5DB9E2A\",\n  \"type\": \"BufferGeometry\",\n  \"data\": {\n    \"attributes\": {\n      \"position\": {\n        \"itemSize\": 3,\n        \"type\": \"Float32Array\",\n        \"array\": [-26,-21.766189,-3.5,-26,-14.433809,-3.5,0,-6.166190,-3.5,0,-6.166190,-3.5,-26,-14.433809,-3.5,0,1.166190,-3.5,0,-6.166190,-3.5,0,1.166190,-3.5,26,-14.433810,-3.5,26,-14.433810,-3.5,26,-21.766191,-3.5,0,-6.166190,-3.5,-26,-14.433809,3.5,0,1.166190,3.5,-26,-14.433809,-3.5,-26,-14.433809,-3.5,0,1.166190,3.5,0,1.166190,-3.5,0,1.166190,3.5,26,-14.433810,3.5,0,1.166190,-3.5,0,1.166190,-3.5,26,-14.433810,3.5,26,-14.433810,-3.5,26,-14.433810,3.5,26,-21.766191,3.5,26,-14.433810,-3.5,26,-14.433810,-3.5,26,-21.766191,3.5,26,-21.766191,-3.5,26,-21.766191,3.5,0,-6.166190,3.5,26,-21.766191,-3.5,26,-21.766191,-3.5,0,-6.166190,3.5,0,-6.166190,-3.5,0,-6.166190,3.5,-26,-21.766189,3.5,0,-6.166190,-3.5,0,-6.166190,-3.5,-26,-21.766189,3.5,-26,-21.766189,-3.5,-26,-21.766189,3.5,-26,-14.433809,3.5,-26,-21.766189,-3.5,-26,-21.766189,-3.5,-26,-14.433809,3.5,-26,-14.433809,-3.5,-26,-21.766189,3.5,0,-6.166190,3.5,-26,-14.433809,3.5,-26,-14.433809,3.5,0,-6.166190,3.5,0,1.166190,3.5,0,1.166190,3.5,0,-6.166190,3.5,26,-14.433810,3.5,26,-14.433810,3.5,0,-6.166190,3.5,26,-21.766191,3.5],\n        \"normalized\": false\n      },\n      \"normal\": {\n        \"itemSize\": 3,\n        \"type\": \"Float32Array\",\n        \"array\": [0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,-0.514495,0.857492,0,-0.514495,0.857492,0,-0.514495,0.857492,0,-0.514495,0.857492,0,-0.514495,0.857492,0,-0.514495,0.857492,0,0.514495,0.857492,0,0.514495,0.857492,0,0.514495,0.857492,0,0.514495,0.857492,0,0.514495,0.857492,0,0.514495,0.857492,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,-0.514495,-0.857492,0,-0.514495,-0.857492,0,-0.514495,-0.857492,0,-0.514495,-0.857492,0,-0.514495,-0.857492,0,-0.514495,-0.857492,0,0.514495,-0.857492,0,0.514495,-0.857492,0,0.514495,-0.857492,0,0.514495,-0.857492,0,0.514495,-0.857492,0,0.514495,-0.857492,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1],\n        \"normalized\": false\n      }\n    },\n    \"boundingSphere\": {\n      \"center\": [0,-10.300000,0],\n      \"radius\": 28.630814\n    }\n  }\n}\n","import { PSVError, utils } from '@photo-sphere-viewer/core';\nimport { VirtualTourNode } from '../model';\nimport { AbstractDatasource } from './AbstractDataSource';\n\nexport class ClientSideDatasource extends AbstractDatasource {\n    loadNode(nodeId: string) {\n        if (this.nodes[nodeId]) {\n            return Promise.resolve(this.nodes[nodeId]);\n        } else {\n            return Promise.reject(new PSVError(`Node ${nodeId} not found`));\n        }\n    }\n\n    setNodes(rawNodes: VirtualTourNode[]) {\n        if (!rawNodes?.length) {\n            throw new PSVError('No nodes provided');\n        }\n\n        const nodes: Record<string, VirtualTourNode> = {};\n        const linkedNodes: Record<string, boolean> = {};\n\n        rawNodes.forEach((node) => {\n            this.checkNode(node);\n\n            if (nodes[node.id]) {\n                throw new PSVError(`Duplicate node ${node.id}`);\n            }\n            if (!node.links) {\n                utils.logWarn(`Node ${node.id} has no links`);\n                node.links = [];\n            }\n\n            nodes[node.id] = node;\n        });\n\n        rawNodes.forEach((node) => {\n            node.links.forEach((link) => {\n                if (!nodes[link.nodeId]) {\n                    throw new PSVError(`Target node ${link.nodeId} of node ${node.id} does not exists`);\n                }\n\n                // copy essential data\n                link.gps = link.gps || nodes[link.nodeId].gps;\n                link.name = link.name || nodes[link.nodeId].name;\n\n                this.checkLink(node, link);\n\n                linkedNodes[link.nodeId] = true;\n            });\n        });\n\n        rawNodes.forEach((node) => {\n            if (!linkedNodes[node.id]) {\n                utils.logWarn(`Node ${node.id} is never linked to`);\n            }\n        });\n\n        this.nodes = nodes;\n    }\n}\n","import type { Viewer } from '@photo-sphere-viewer/core';\nimport { PSVError, utils } from '@photo-sphere-viewer/core';\nimport { VirtualTourLink, VirtualTourNode } from '../model';\nimport type { VirtualTourPlugin } from '../VirtualTourPlugin';\n\nexport abstract class AbstractDatasource {\n    nodes: Record<string, VirtualTourNode> = {};\n\n    constructor(protected readonly plugin: VirtualTourPlugin, protected readonly viewer: Viewer) {}\n\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    destroy() {}\n\n    /**\n     * @summary Loads a node\n     * @param {string} nodeId\n     * @return {Promise<PSV.plugins.VirtualTourPlugin.Node>}\n     */\n    abstract loadNode(nodeId: string): Promise<VirtualTourNode>;\n\n    /**\n     * Checks the configuration of a node\n     */\n    protected checkNode(node: VirtualTourNode) {\n        if (!node.id) {\n            throw new PSVError('No id given for node');\n        }\n        if (!node.panorama) {\n            throw new PSVError(`No panorama provided for node ${node.id}`);\n        }\n        if ('position' in node) {\n            utils.logWarn('Use the \"gps\" property to configure the GPS position of a virtual node');\n            // @ts-ignore\n            node.gps = node['position'];\n        }\n        if (this.plugin.isGps && !(node.gps?.length >= 2)) {\n            throw new PSVError(`No GPS position provided for node ${node.id}`);\n        }\n        if (!this.plugin.isGps && node.markers?.some((marker) => marker.gps && !marker.position)) {\n            throw new PSVError(`Cannot use GPS positioning for markers in manual mode`);\n        }\n    }\n\n    /**\n     * Checks the configuration of a link\n     */\n    protected checkLink(node: VirtualTourNode, link: VirtualTourLink) {\n        if (!link.nodeId) {\n            throw new PSVError(`Link of node ${node.id} has no target id`);\n        }\n        if (Array.isArray(link.position)) {\n            utils.logWarn('Use the \"gps\" property to configure the GPS position of a virtual link');\n            link.gps = link.position as any;\n            delete link.position;\n        }\n        if (utils.isExtendedPosition(link)) {\n            utils.logWarn('Use the \"position\" property to configure the position of a virtual link');\n            link.position = this.viewer.dataHelper.cleanPosition(link);\n        }\n        if (!this.plugin.isGps && !utils.isExtendedPosition(link.position)) {\n            throw new PSVError(`No position provided for link ${link.nodeId} of node ${node.id}`);\n        }\n        if (this.plugin.isGps && !link.gps) {\n            throw new PSVError(`No GPS position provided for link ${link.nodeId} of node ${node.id}`);\n        }\n    }\n}\n","import type { Viewer } from '@photo-sphere-viewer/core';\nimport { PSVError, utils } from '@photo-sphere-viewer/core';\nimport { VirtualTourPluginConfig } from '../model';\nimport { VirtualTourPlugin } from '../VirtualTourPlugin';\nimport { AbstractDatasource } from './AbstractDataSource';\n\nexport class ServerSideDatasource extends AbstractDatasource {\n    private readonly nodeResolver: VirtualTourPluginConfig['getNode'];\n\n    constructor(plugin: VirtualTourPlugin, viewer: Viewer) {\n        super(plugin, viewer);\n\n        if (!plugin.config.getNode) {\n            throw new PSVError('Missing getNode() option.');\n        }\n\n        this.nodeResolver = plugin.config.getNode;\n    }\n\n    loadNode(nodeId: string) {\n        if (this.nodes[nodeId]) {\n            return Promise.resolve(this.nodes[nodeId]);\n        } else {\n            return Promise.resolve(this.nodeResolver(nodeId)).then((node) => {\n                this.checkNode(node);\n                if (!node.links) {\n                    utils.logWarn(`Node ${node.id} has no links`);\n                    node.links = [];\n                }\n\n                node.links.forEach((link) => {\n                    // copy essential data\n                    if (this.nodes[link.nodeId]) {\n                        link.gps = link.gps || this.nodes[link.nodeId].gps;\n                        link.name = link.name || this.nodes[link.nodeId].name;\n                    }\n\n                    this.checkLink(node, link);\n                });\n\n                this.nodes[nodeId] = node;\n                return node;\n            });\n        }\n    }\n}\n","import { Position, utils } from '@photo-sphere-viewer/core';\nimport { Mesh, BufferGeometry, MeshBasicMaterial, MathUtils, HexColorString } from 'three';\nimport { GpsPosition } from './model';\n\n/**\n * Changes the color of a mesh\n */\nexport function setMeshColor(mesh: Mesh<BufferGeometry, MeshBasicMaterial>, color: HexColorString) {\n    mesh.material.color.set(color);\n}\n\n/**\n * Returns the distance between two GPS points\n */\nexport function distance(p1: [number, number], p2: [number, number]): number {\n    return utils.greatArcDistance(p1, p2) * 6371e3;\n}\n\n/**\n * Returns the bearing between two GPS points\n * @link http://www.movable-type.co.uk/scripts/latlong.html\n */\nexport function bearing(p1: [number, number], p2: [number, number]): number {\n    const [long1, lat1] = p1;\n    const [long2, lat2] = p2;\n\n    const y = Math.sin(long2 - long1) * Math.cos(lat2);\n    const x = Math.cos(lat1) * Math.sin(lat2) - Math.sin(lat1) * Math.cos(lat2) * Math.cos(long2 - long1);\n    return Math.atan2(y, x);\n}\n\n/**\n * Returns the difference between two WS84 GPS points as yaw+pitch on the viewer\n */\nexport function gpsToSpherical(gps1: GpsPosition, gps2: GpsPosition): Position {\n    const p1: [number, number] = [MathUtils.degToRad(gps1[0]), MathUtils.degToRad(gps1[1])];\n    const p2: [number, number] = [MathUtils.degToRad(gps2[0]), MathUtils.degToRad(gps2[1])];\n    const h1 = gps1[2] ?? 0;\n    const h2 = gps2[2] ?? 0;\n\n    let pitch = 0;\n    if (h1 !== h2) {\n        pitch = Math.atan((h2 - h1) / distance(p1, p2));\n    }\n\n    const yaw = bearing(p1, p2);\n\n    return { yaw, pitch };\n}\n"],"mappings":"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","names":["PSVError","utils","MathUtils","Mesh","MeshBasicMaterial","arrow_default","arrow_default","PSVError","utils","PSVError","utils","PSVError","utils","PSVError","utils","utils","utils","PSVError","Mesh","MeshBasicMaterial","MathUtils"]}